Now we'll get started in this section

by taking another look at this JSX code,

this HTML in JavaScript code

about which you learned in the last course section.

Because there I mentioned that this JSX code, of course,

is a non-standard feature.

It's not supported by the browser

and therefore the code you write in your code files here

is not the code that ends up in the browser.

Instead, as you learned, we got a build process

that's running behind the scenes that actually transforms

and potentially also optimizes our code

such that it does work in the browser.

But as a React developer,

you should know that, in theory,

you could also build React apps without using JSX,

and therefore, if you needed to,

without using such a build process, though I will also say

that the vast majority of React projects

will use this JSX code

and a build process that transforms it.

And that will also be the case

for all the projects in this course.

Nonetheless, you should know

that you technically don't need JSX

to build a React project.

It's just convenient.

But you could replace this JSX code,

which you might return in a component,

with this code here, which does not use JSX at all,

but which instead only uses standard Java script features.

To be precise, this code snippet on the right here

uses the createElement method exposed by React

to create that same structure,

that same HTML code in the end, you could say,

as you see on the left without using JSX.

For that, this createElement method takes the component type

that should be created, so to say, as the first argument,

then takes the props object

you might want to pass to that component or element.

And then you can also have child elements

as the third argument so that you can control

which content goes between the opening and closing tag

of that component.

And you could go for this non-JSX approach

if you want a project that requires no build process

because with JSX,

you, of course, do need such a build process.

But of course, it's not really difficult to create a project

that comes with such a built process.

You don't need to write the code for that process

on your own.

And therefore, in the end,

this JSX approach is typically easier to use

and definitely easier to read and understand

because this non-JSX approach, of course,

is pretty verbose and not necessarily intuitive.

But here in our project,

this project we worked on in the previous section,

you'll find my latest code snapshot

and a link to this project on CodeSandbox

attached to this lecture.

In that project, in the index JSX file,

we could create this app component here

by instead, importing React from react.

So this main React object which is exposed

by the React library.

And instead of creating our root component like this,

we could create it here by not using JSX

but by instead calling React, createElement

and then here,

since we want to use the custom app component,

we can just pass a pointer

at that app component function to createElement,

since that's the type of component we want to create here.

And with that, if I would save this,

I would see the same application as before on the screen

and I also don't get any errors here

because this here is a valid alternative to this JSX code.

But as mentioned, typically you, of course,

go for the JSX code

because it's not really difficult to use here

and you don't need to manage that build process on your own.