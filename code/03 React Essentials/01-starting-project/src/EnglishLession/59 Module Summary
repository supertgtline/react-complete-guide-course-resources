So that's it

for this React Essentials section.

And in this section we built this beautiful,

interactive demo web app here with React.

And whilst building it,

we learned about all these core concepts

which you also see on this demo website.

You learned that React is all about components

and you learned how you can create

and also use such components,

that components are in the end simply functions

which must have a name

that starts with an uppercase character,

and which must return a value that can be rendered by React

which typically means that they return on JSX code.

And you learned that you can use these component functions

pretty much as if they were custom

HTML elements inside of JSX code.

You also learned how to configure components with props

like this isSelected prop here,

that you can set any props you want

or even spread an entire object as key value pairs,

so as props onto a component,

and that inside of a component,

you then get those props as the first parameter

in that component function.

And you can use object destructuring if you want to

to get hold of these different props like this.

Alternatively, you could use props and then props.image,

props.title, and so on.

But with that, we of course only got started,

because you also learned how to output dynamic content

with those curly braces.

And you can either output content between tags

or as attribute values.

And you learned about the special children prop

which is a prop created and provided by React

which simply gives you access to the content

that's passed to your component

between your component's opening and closing tags.

So this content here between those tags is received

inside of the component through that special children prop.

So components and props and JSX code, as you learned,

are all super important features,

but if you only had those features, you would not be able

to build interactive websites.

For that, instead, you also must be able to listen to events

which you can do with these special on props.

And you also learned how you can add your own on props

to your own components so that you can receive

and forward functions to the actual elements

that should register event handlers.

So here, for example, this TabButton

has the onSelect prop, which is used as a value

for the onClick prop on the built-in button.

And we can use this onSelect prop to point at the function

that should be executed when the button

inside of that TabButton is clicked in the end.

But of course, this alone is not enough.

You also learned that if you want to update the UI

you must useState, this special useState hook to be precise.

You can use this hook to register some data

that's managed by React and to update that data

with help of that special state updating function here.

And this feature here, this useState hook,

therefore allows you to manage and update data,

which when updated will cause the component function

to which the state belongs to execute again

so that the JSX code is also reevaluated

and the UI is updated if needed.

So React will basically take a look

at the old JSX code and the new JSX code

and if it finds any differences, for example,

because this tab content changed,

because here the data that should be output changed,

React will go ahead and update the actual UI

to match our new state again.

Now along the way in this section, you also learned

about different ways of outputting conditional content,

for example, by using a variable and an if statement,

and by then outputting that variable

as dynamic content in your JSX code.

But you also learned about alternatives

like using a ternary expression

or by using the logical and operator as a shortcut.

And last but not least,

you learned how to output list data dynamically

by mapping an array of data

with the built-in map method into an array of JSX elements.

The special thing to keep in mind here

just is that you then also must add such a key prop here

so that behind the scenes React is able to render

and update that list efficiently.

And with that, you now get a solid set of React Essentials,

essentials which you will need

in basically any React app you are going to build.

And you are therefore now ready to get started

building your first basic React apps.

And then of course also to dive much deeper

into those essentials,

but also into React and advanced features.

And of course,

we're going to do all these things in this course.


